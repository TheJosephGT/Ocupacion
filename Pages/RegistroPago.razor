@page "/Pagos"
@page "/pagos/{PagosId:int}"

@inject PagosBLL pagosBLL
@inject PersonaBLL personaBLL

<!--Campos: Pagos(PagoId, Fecha, PersonaId, Concepto, Monto), PagosDetalle(Id, PagoId, PrestamoId, ValorPagado) -->

<EditForm Model="pagos" OnInvalidSubmit="Guardar">
    <div class= "card">
    <div class= "card-header">
        <h1> Registo Pagos </h1>
    </div>
    

    <div class="card-body">
        <label>PagoId: </label><br>
        <InputNumber @bind-Value="pagos.PagoId" class="form-control" /><br>

        <button type="submit" class="btn btn-success" @onclick="Buscar"><span class ="oi oi-document"</span>Buscar</button><br>

        <label>Fecha: </label><br>
        <InputText @bind-Value="pagos.Fecha" class="form-control" /><br>

        <label>PersonaId: </label><br>
        <InputSelect class="form-select" @bind-Value="pagos.PersonaId">
				@foreach (var personaExistente in personaBLL.GetList(o => true))
				{
					<option value="@personaExistente.PersonaId">@personaExistente.Nombre</option>
				}
		</InputSelect>

        <label>Concepto: </label><br>
        <InputText @bind-Value="pagos.Concepto" class="form-control" /><br>

        <label>Monto: </label><br>
        <InputNumber @bind-Value="pagos.Monto" class="form-control" /><br>

    </div>

<div class="model-footer">
        <button type="buttom" class="btn btn-primary" @onclick="Nuevo"><span class ="oi oi-file" </span>Nuevo</button>
        <button type="submit" class="btn btn-success" @onclick="Guardar"><span class ="oi oi-document"</span>Guardar</button>
        <button type="button" class="btn btn-danger" @onclick="Eliminar"><span class ="oi oi-delete"</span>Eliminar</button>
    </div>

</div>
</EditForm>

@code {
    [Parameter]

    public int PagosId { get; set; }

    public Pagos pagos { get; set; } = new Pagos();

    protected override void OnInitialized()
    {
        if (PagosId > 0)
        {
            this.pagos.PagoId = PagosId;
            this.Buscar();
        }
    }

    void Buscar()
    {

        var pagoEncontrada = pagosBLL.Buscar(pagos.PagoId);
        if (pagoEncontrada != null)
        {
            this.pagos = pagoEncontrada;
        }
    }

    void Nuevo()
    {
        this.pagos = new Pagos();

    }

    void Guardar()
    {

        var guardado = pagosBLL.Guardar(pagos);

        if (guardado)
        {
            Nuevo();
        }
        else
        {

        }

    }

    void Eliminar()
    {
        bool eliminado;

        eliminado = true;

        if (eliminado)
        {
            Nuevo();
        }
        else
        {

        }

    }



}