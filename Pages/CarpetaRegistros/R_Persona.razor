@page "/Persona"
@page "/persona/{PersonaId:int}"

@inject PersonasBLL personasBLL
@inject OcupacionesBLL ocupacionesBLL
@inject NotificationService NotificationService

<EditForm Model="personas" OnInvalidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1> Registo Persona </h1>
        </div>

        <div class="card-body">

            <div>
                <label>PersonaId: </label><br>
                <InputNumber @bind-Value="personas.PersonaId" class="form-control" /><br>

                <button type="buttom" class="btn btn-primary" @onclick="Buscar"><span class="oi oi-file" </span>Buscar</button><br>
            </div>

            <div>
                <label>Nombre: </label><br>
                <InputText @bind-Value="personas.Nombre" class="form-control" /><br>
                <ValidationMessage For="@(() => personas.Nombre)" />
            </div>

            <div>
                <label>Telefono: </label><br>
                <InputText @bind-Value="personas.Telefono" class="form-control" /><br>
            </div>

            <div>
                <label>Celular: </label><br>
                <InputText @bind-Value="personas.Celular" class="form-control" /><br>
            </div>

            <div>
                <label>Email: </label><br>
                <InputText @bind-Value="personas.Email" class="form-control" /><br>
                <ValidationMessage For="@(() => personas.Email)" />
            </div>

            <div>
                <label>Direccion: </label><br>
                <InputText @bind-Value="personas.Direccion" class="form-control" /><br>
            </div>

            <div>
                <label>FechaNacimiento: </label><br>
                <InputDate @bind-Value="personas.FechaNacimiento" class="form-control" /><br>
            </div>

            <div>
                <label>OcupacionId: </label><br>
                <InputSelect @bind-Value="personas.OcupacionId" class="form-control">

                @foreach (var ocupacionesExistentes in ocupacionesBLL.GetList(o => true))
                {
                    <option value="@ocupacionesExistentes.OcupacionID">@ocupacionesExistentes.Descripcion</option>
                }

                </InputSelect><br>
                <ValidationMessage For="@(() => personas.OcupacionId)" />
            </div>

        </div>

        <div class="model-footer">
            <button type="buttom" class="btn btn-primary" @onclick="Nuevo"><span class="oi oi-file" </span>Nuevo</button>
            <button type="submit" class="btn btn-success" @onclick="Guardar"><span class="oi oi-delete" </span>Guardar</button>
            <button type="button" class="btn btn-danger" @onclick="Eliminar"><span class="oi oi-document" </span>Eliminar</button>
        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public int PersonaId { get; set; }

	public Personas personas { get; set; } = new Personas();
    protected override void OnInitialized()
    {
        if(PersonaId > 0){
            this.personas.PersonaId = PersonaId;
            Buscar();
        }
    }
    
    void Buscar(){
        var personaEncontrado = personasBLL.Buscar(this.personas.PersonaId);
        if(personaEncontrado !=null ){
            this.personas = personaEncontrado;
        }
        else{
        ShowNotification(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Ingrese un valor valido."
            }
        );
        }

    }
    void Nuevo(){
        this.personas = new Personas();
    }
    bool Validar(){
        if(!String.IsNullOrEmpty(personas.Nombre) || !String.IsNullOrEmpty(personas.Email)){
            return true;
        }
        return false;
    }
    void Guardar(){
        if(!Validar()){
            return;
        }
        if(personasBLL.Guardar(personas))
        ShowNotification(new NotificationMessage
                {
                    Severity = NotificationSeverity.Success,
                    Summary = "Se ha guardado con exito."
                }
            );
            this.Nuevo();
    }
    void Eliminar(){
        if(personasBLL.Eliminar(personas.PersonaId)){
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Info,
                Summary = "Se ha eliminado"
            }
        );
        this.Nuevo();
    }
    else{
        ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "No hay elemento para borrar."
            }
        );
        return ;
    }
}    
    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }

}