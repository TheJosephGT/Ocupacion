@page "/Persona"
@page "/persona/{PersonaId:int}"

@inject PersonasBLL personasBLL
@inject OcupacionesBLL ocupacionesBLL
@inject NotificationService NotificationService

<EditForm Model="persona" OnValidSubmit="Guardar">
     <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1> Registo Persona </h1>
        </div>

        <div class="card-body">
            <div class="form-group">
                <label>PersonaId: </label>
                <InputNumber @bind-Value="persona.PersonaId" class="form-control" /><br>
                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar"><i class="oi oi-magnifying-glass" /> Buscar</button>
            </div>

            <div class="form-group">
                <label>Nombre: </label>
                <InputText @bind-Value="persona.Nombre" class="form-control" />
                <ValidationMessage For="@(() => persona.Nombre)" />
            </div>

            <div class="form-group">
                <label>Telefono: </label>
                <InputText @bind-Value="persona.Telefono" class="form-control" />
            </div>

            <div class="form-group">
                <label>Celular: </label>
                <InputText @bind-Value="persona.Celular" class="form-control" />
            </div>

            <div class="form-group">
                <label>Email: </label>
                <InputText @bind-Value="persona.Email" class="form-control" />
                <ValidationMessage For="@(() => persona.Email)" />
            </div>

            <div class="form-group">
                <label>Direccion: </label>
                <InputText @bind-Value="persona.Direccion" class="form-control" />
            </div>

            <div class="form-group">
                <label>FechaNacimiento: </label>
                <InputDate @bind-Value="persona.FechaNacimiento" class="form-control" />
            </div>

            <div class="form-group">
                <label>OcupacionId: </label>
                <InputSelect @bind-Value="persona.OcupacionId" class="form-control">

                @foreach (var ocupacionesExistentes in ocupacionesBLL.GetList(o => true))
                {
                    <option value="@ocupacionesExistentes.OcupacionId">@ocupacionesExistentes.Descripcion</option>
                }

                </InputSelect><br>
                <ValidationMessage For="@(() => persona.OcupacionId)" />
            </div>

        </div>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><i class="oi oi-file" /> Nuevo </button>
                <button type="submit" class="btn btn-lg btn-success"><i class="oi oi-document" /> Guardar </button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><i class="oi oi-trash" /> Eliminar </button>
            </div>
        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public int PersonaId { get; set; }

	public Personas persona { get; set; } = new Personas();
    protected override void OnInitialized()
    {
        if(PersonaId > 0){
            this.persona.PersonaId = PersonaId;
            this.Buscar();
        }
    }
    
    private void Buscar(){
        if (persona.PersonaId > 0)
        {
            var encontrado = personasBLL.Buscar(persona.PersonaId);

            if (encontrado != null)
                this.persona = encontrado;
            
        }

    }
    public void Nuevo(){
        persona = new Personas();
    }
    bool Validar()
    {
        return true;
    }
    public void Guardar()
    {
        bool Guardado;

        if (!Validar())
        {
            return;
        }


        Guardado = personasBLL.Guardar(persona);

        if (Guardado)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });
            
            Nuevo();
            
        }
    }
    public void Eliminar()
    {
        bool eliminado;

        eliminado = personasBLL.Eliminar(persona);

        if (eliminado)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Warning,
                Summary = "Eliminado Correctamente"
            });
            Nuevo();
            
        }
        
    }    
    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }

}