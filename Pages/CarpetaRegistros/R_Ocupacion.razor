@page "/ocupacion"
@page "/ocupacion/{OcupacionId:int}"

@inject OcupacionesBLL OcupacionesBLL
@inject NotificationService notificationService

<EditForm Model="ocupacion" OnValidSubmit="Guardar">
    	<DataAnnotationsValidator />
	<div class= "card">
	<div class= "card-header">
		<h1> Registo Ocupaciones </h1>
	</div>

	<div class="card-body">
		<div class="form-group">
			<label>OcupacionID: </label><br>
			<InputNumber @bind-Value="ocupacion.OcupacionId" class="form-control" /> <br>
			<button type="button" class="btn btn-primary input-group-text" @onclick="Buscar"><i class="oi oi-magnifying-glass" /> Buscar</button>
		</div>

		<div class="form-group">
			<label>Descripcion: </label><br>
			<InputText @bind-Value="ocupacion.Descripcion" class="form-control" />
			<ValidationMessage For="@(() => ocupacion.Descripcion)" />
		</div>

		<div class="form-group"> 
			<label>Salario: </label><br>
			<InputNumber @bind-Value="ocupacion.Salario" class="form-control" />
			<ValidationMessage For="@(() => ocupacion.Salario)"/>
		</div>
	</div>

    <div class="card-footer">
        <div class="form-group text-center" display: inline-block>
            <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><i class="oi oi-file" /> Nuevo </button>
            <button type="submit" class="btn btn-lg btn-success"><i class="oi oi-document" /> Guardar </button>
            <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><i class="oi oi-trash" /> Eliminar </button>
        </div>
    </div>

</div>
</EditForm>

@code {
    [Parameter]
    public int OcupacionId { get; set; }

    public Ocupaciones ocupacion { get; set; } = new Ocupaciones();


    protected override void OnInitialized()
    {
        if (OcupacionId > 0)
        {
           
            this.ocupacion.OcupacionId = OcupacionId;
            this.Buscar();
        }
    }

    public void Nuevo()
    {
        ocupacion = new Ocupaciones();
    }

    bool Validar()
    {
        return true;
    }

    public void Guardar()
    {
        bool Guardado;

        if (!Validar())
        {
            return;
        }


        Guardado = OcupacionesBLL.Guardar(ocupacion);

        if (Guardado)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });
            
            Nuevo();
            
        }
        
    }
    private void Buscar()
    {
        if (ocupacion.OcupacionId > 0)
        {
            var encontrado = OcupacionesBLL.Buscar(ocupacion.OcupacionId);

            if (encontrado != null)
                this.ocupacion = encontrado;
            
        }
    }

    public void Eliminar()
    {
        bool eliminado;

        eliminado = OcupacionesBLL.Eliminar(ocupacion);

        if (eliminado)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Warning,
                Summary = "Eliminado Correctamente"
            });
            Nuevo();
            
        }
        
    }

    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);

    }
}
