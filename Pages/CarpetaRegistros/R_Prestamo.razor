@page "/Prestamo"
@page "/prestamo/{PrestamoId:int}"

@inject PrestamosBLL prestamosBLL
@inject PersonasBLL personasBLL
@inject NotificationService NotificationService

<EditForm Model="prestamo" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h1> Registo Prestamo </h1>
        </div>


        <div class="card-body">
            <div class="form-group">
                <label>PrestamoId: </label><br>
                <InputNumber @bind-Value="prestamo.PrestamoId" class="form-control" /><br>
                <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar"><i class="oi oi-magnifying-glass" /> Buscar</button><br>
            </div>

            <div class="form-group">
                <label>Fecha: </label><br>
                <InputDate @bind-Value="prestamo.Fecha" class="form-control" /><br>
            </div>

            <div class="form-group">
                <label>Vence: </label><br>
                <InputDate @bind-Value="prestamo.Vence" class="form-control" /><br>
            </div>

            <div class="form-group">
                <label>PersonaId: </label><br>
                <InputSelect class="form-select" @bind-Value="prestamo.PersonaId">
                    @foreach (var personaExistente in personasBLL.GetList(o => true))
                    {
                        <option value="@personaExistente.PersonaId">@personaExistente.Nombre</option>
                    }
                </InputSelect>
            </div>

            <div class="form-group">
                <label>Concepto: </label><br>
                <InputText @bind-Value="prestamo.Concepto" class="form-control" /><br>
                <ValidationMessage For="@(() => prestamo.Concepto)" />
            </div>

            <div class="form-group">
                <label>Monto: </label><br>
                <InputNumber @bind-Value="prestamo.Monto" class="form-control" /><br>
                <ValidationMessage For="@(() => prestamo.Monto)" />
            </div>

            <div class="form-group">
                <label>Balance: </label><br>
                <InputNumber @bind-Value="prestamo.Balance" class="form-control" /><br>
                <ValidationMessage For="@(() =>prestamo.Balance)" />
            </div>


        </div>

        <div class="card-footer">
            <div class="form-group text-center" display: inline-block>
                <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo"><i class="oi oi-file" /> Nuevo </button>
                <button type="submit" class="btn btn-lg btn-success"><i class="oi oi-document" /> Guardar </button>
                <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar"><i class="oi oi-trash" /> Eliminar </button>
            </div>
        </div>

    </div>
</EditForm>

@code {
    [Parameter]
    public int prestamoId { get; set; }

	public Prestamos prestamo { get; set; } = new Prestamos();
    protected override void OnInitialized()
    {
        if(prestamoId > 0){
            this.prestamo.PrestamoId = prestamoId;
            this.Buscar();
        }
    }
    
    private void Buscar(){
        if (prestamo.PrestamoId > 0)
        {
            var encontrado = prestamosBLL.Buscar(prestamo.PrestamoId);

            if (encontrado != null)
                this.prestamo = encontrado;
            
        }

    }
    public void Nuevo(){
        prestamo = new Prestamos();
    }
    bool Validar()
    {
        return true;
    }
    public void Guardar()
    {
        bool Guardado;

        if (!Validar())
        {
            return;
        }


        Guardado = prestamosBLL.Guardar(prestamo);

        if (Guardado)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });
            
            Nuevo();
            
        }
    }
    public void Eliminar()
    {
        bool eliminado;

        eliminado = prestamosBLL.Eliminar(prestamo);

        if (eliminado)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Warning,
                Summary = "Eliminado Correctamente"
            });
            Nuevo();
            
        }
        
    }    
    void ShowNotification(NotificationMessage message)
    {
        NotificationService.Notify(message);
    }

}